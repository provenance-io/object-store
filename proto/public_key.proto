syntax = "proto3";

package objectstore;

option java_package = "io.provenance.objectstore.proto";
option java_outer_classname = "PublicKeys";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "util.proto";

service PublicKeyService {
    rpc Add(PublicKeyRequest) returns (PublicKeyResponse) {};
}

message HeaderAuth {
    string header = 1;
    string value = 2;
}

message PublicKeyRequest {
    reserved 4;
    reserved "signing_public_key";

    // public key of a party member used for encryption
    PublicKey public_key = 1;

    // optional - remote url of the object-store associated with the p8e public key
    // when blank, this public key is associated with the local p8e environment
    string url = 2;

    // optional - used for authorization when desired
    oneof impl {
        HeaderAuth header_auth = 5;
    }

    // optional - contains any associated metadata that the caller wants to attach
    // to this public key
    google.protobuf.Any metadata = 3;
}

message PublicKeyResponse {
    reserved 7;
    reserved "signing_public_key";

    UUID uuid = 1;
    PublicKey public_key = 2;
    string url = 3;
    oneof impl {
        HeaderAuth header_auth = 8;
    }
    google.protobuf.Any metadata = 4;

    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}
